name: EndToEnd testing
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  e2e-Testing:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Create Network
        run: |
          ls
          docker network create -d bridge --subnet=192.168.0.0/16 my-bridge-network

      - name: Run container user-api
        run: |
          ls
          docker run -d --network=my-bridge-network --ip 192.168.2.3 -p 8081:80 -e DATABASE_CONECTION='Server=192.168.2.2,1433;Database=master;User Id=sa;Password=Password123;' --name api1 cheffjeff/comic-book-library:userbackend
      - name: Run container database
        run: |
          ls
          docker run -d --network=my-bridge-network --ip 192.168.2.2 -p 1433:1433 --name database cheffjeff/comic-book-library:database-new
      - name: Run container comic database
        run: |
          ls
          docker run -d --network=my-bridge-network --ip 192.168.2.5 -p 1450:1450 --name comicbase cheffjeff/comic-book-library:database-comic

      - name: Run container comic-api
        run: |
          ls
          docker run -d --network=my-bridge-network --ip 192.168.2.4 -p 8080:80 -e DATABASE_CONECTION='Server=192.168.2.5,1450;Database=master;User Id=sa;Password=Password123;' --name api2 cheffjeff/comic-book-library:comicsbackend
      - name: Run container frond-end
        run: |
          ls
          docker run -d --network=my-bridge-network -p 8082:80 --name app cheffjeff/comic-book-library:userfrondend
          docker network inspect my-bridge-network

      - name: checks
        run : | 
          docker network inspect my-bridge-network 
          docker container ls
          docker exec api1 env
          docker exec api2 env
      - name: check api running
        shell: pwsh
        run: |
          $Response = Invoke-WebRequest -URI http://localhost:8081/api/Users
          $Response.Content
      - name: Run Cypress Test
        uses: cypress-io/github-action@v4
        with:
          working-directory: './user-front-end'
          command: npx cypress run --record --key 762e07a9-b53b-43a8-ad5a-99eea47daa17
          browser: chrome
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: user-front-end/cypress/videos